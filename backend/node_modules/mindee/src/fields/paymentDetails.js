"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _PaymentDetails_instances, _PaymentDetails_setKey;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentDetails = void 0;
const field_1 = require("./field");
class PaymentDetails extends field_1.Field {
    /**
     * @param {Object} prediction - Prediction object from HTTP response
     * @param {String} valueKey - Key to use in the prediction dict to get the iban
     * @param {String} accountNumberKey - Key to use to get the account number in the prediction dict
     * @param {String} ibanKey - Key to use to get the IBAN in the prediction dict
     * @param {String} routingNumberKey - Key to use to get the routing number in the prediction dict
     * @param {String} swiftKey - Key to use to get the SWIFT in the prediction dict
     * @param {Boolean} reconstructed - Does the object is reconstructed (not extracted by the API)
     * @param {Integer} pageId - Page ID for multi-page document
     */
    constructor({ prediction, valueKey = "iban", accountNumberKey = "account_number", ibanKey = "iban", routingNumberKey = "routing_number", swiftKey = "swift", reconstructed = false, pageId = undefined, }) {
        super({ prediction, valueKey, reconstructed, pageId });
        _PaymentDetails_instances.add(this);
        this.accountNumber = undefined;
        this.iban = undefined;
        this.routingNumber = undefined;
        this.swift = undefined;
        __classPrivateFieldGet(this, _PaymentDetails_instances, "m", _PaymentDetails_setKey).call(this, prediction[accountNumberKey], "accountNumber");
        __classPrivateFieldGet(this, _PaymentDetails_instances, "m", _PaymentDetails_setKey).call(this, prediction[ibanKey], "iban");
        __classPrivateFieldGet(this, _PaymentDetails_instances, "m", _PaymentDetails_setKey).call(this, prediction[routingNumberKey], "routingNumber");
        __classPrivateFieldGet(this, _PaymentDetails_instances, "m", _PaymentDetails_setKey).call(this, prediction[swiftKey], "swift");
    }
    toString() {
        let str = "";
        const keys = ["accountNumber", "iban", "routingNumber", "swift"];
        for (const key of keys) {
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            if (this[key])
                str += `${this[key]}; `;
        }
        return str;
    }
}
exports.PaymentDetails = PaymentDetails;
_PaymentDetails_instances = new WeakSet(), _PaymentDetails_setKey = function _PaymentDetails_setKey(value, key) {
    if (typeof value === "string" && value !== "N/A") {
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        this[key] = value;
    }
    else {
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        this[key] = undefined;
    }
};
